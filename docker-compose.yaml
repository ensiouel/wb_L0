version: "3.9"

services:
  app:
    build: .
    ports:
      - "8080:8080"
    networks:
      - local
    env_file:
      - .env
    depends_on:
      - goose
      - nats-streaming
    restart: always
  goose:
    build: ./migration
    networks:
      - local
    volumes:
      - "./migration:/migration"
    command: [ "goose", "-dir", "/migration", "postgres", "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable", "up" ]
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    networks:
      - local
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure
  nats-streaming:
    image: library/nats-streaming:latest
    ports:
      - "4222:4222"
    networks:
      - local
    command: [ "--cluster_id", "${CLUSTER_ID}" ]
    volumes:
      - "nats-streaming-data:/var/lib/nats-streaming/data"
    restart: on-failure
networks:
  local:
    driver: bridge

volumes:
  postgres-data:
  nats-streaming-data: